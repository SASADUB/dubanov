<html xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv="Content-Language" content="ru">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<link rel="File-List" href="rus_head_1_2.files/filelist.xml">
<title>Новая страница 1</title>
<!--[if !mso]>
<style>
v\:*         { behavior: url(#default#VML) }
o\:*         { behavior: url(#default#VML) }
.shape       { behavior: url(#default#VML) }
</style>
<![endif]--><!--[if gte mso 9]>
<xml><o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]-->
</head>

<body bgcolor="#FFFFFF">

<p align="center"><b><font size="4">1.2 Построение перпендикуляра к двум прямым</font></b></p>
<p>&nbsp;&nbsp;&nbsp; Рассмотрим в пространстве две скрещивающиеся прямые. Пусть 
каждая прямая задана точкой и направляющим вектором:
<img border="0" src="rus_he3.gif" align="center"> и
<img border="0" src="rus_he4.gif" align="center"> (рис. 1-2-1).<span lang="en-us">
</span>Решим задачу о построении прямой, перпендикулярной к обеим прямым.</p>
<div align="left">
	<table border="0">
		<!-- MSTableType="nolayout" -->
		<tr>
			<td><!--[if gte vml 1]><v:group id="_x0000_s1111"
 editas="canvas" alt="" style='width:260.25pt;height:233.25pt' coordorigin="371,212"
 coordsize="347,311">
 <o:lock v:ext="edit" aspectratio="t"/>
 <v:shapetype id="_x0000_t75" coordsize="21600,21600" o:spt="75"
  o:preferrelative="t" path="m@4@5l@4@11@9@11@9@5xe" filled="f" stroked="f">
  <v:stroke joinstyle="miter"/>
  <v:formulas>
   <v:f eqn="if lineDrawn pixelLineWidth 0"/>
   <v:f eqn="sum @0 1 0"/>
   <v:f eqn="sum 0 0 @1"/>
   <v:f eqn="prod @2 1 2"/>
   <v:f eqn="prod @3 21600 pixelWidth"/>
   <v:f eqn="prod @3 21600 pixelHeight"/>
   <v:f eqn="sum @0 0 1"/>
   <v:f eqn="prod @6 1 2"/>
   <v:f eqn="prod @7 21600 pixelWidth"/>
   <v:f eqn="sum @8 21600 0"/>
   <v:f eqn="prod @7 21600 pixelHeight"/>
   <v:f eqn="sum @10 21600 0"/>
  </v:formulas>
  <v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"/>
  <o:lock v:ext="edit" aspectratio="t"/>
 </v:shapetype><v:shape id="_x0000_s1112" type="#_x0000_t75" style='position:absolute;
  left:371;top:212;width:347;height:311' o:preferrelative="f">
  <v:fill o:detectmouseclick="t"/>
  <v:path o:extrusionok="t" o:connecttype="none"/>
  <o:lock v:ext="edit" text="t"/>
 </v:shape><v:line id="_x0000_s1113" style='position:absolute;flip:y' from="414,293"
  to="576,472"/>
 <v:line id="_x0000_s1114" style='position:absolute;flip:x y' from="526,288"
  to="714,522"/>
 <v:line id="_x0000_s1115" alt="" style='position:absolute;flip:y' from="414,425"
  to="456,474" strokeweight="3pt">
  <v:stroke endarrow="block" endarrowlength="long"/>
 </v:line><v:line id="_x0000_s1116" alt="" style='position:absolute;flip:x y'
  from="636,427" to="670,467" strokeweight="3pt">
  <v:stroke endarrow="block" endarrowlength="long"/>
 </v:line><v:oval id="_x0000_s1117" alt="" style='position:absolute;left:410;
  top:470;width:8;height:8' fillcolor="black"/>
 <v:oval id="_x0000_s1118" alt="" style='position:absolute;left:663;top:460;
  width:8;height:8' fillcolor="black"/>
 <v:line id="_x0000_s1119" alt="" style='position:absolute' from="527,292"
  to="527,347" strokeweight="3pt"/>
 <v:oval id="_x0000_s1120" alt="" style='position:absolute;left:523;top:286;
  width:8;height:8' fillcolor="black"/>
 <v:oval id="_x0000_s1121" alt="" style='position:absolute;left:523;top:341;
  width:8;height:8' fillcolor="black"/>
 <v:line id="_x0000_s1122" alt="" style='position:absolute;flip:x y' from="379,434"
  to="413,474" strokeweight="3pt">
  <v:stroke endarrow="block" endarrowlength="long"/>
 </v:line><v:line id="_x0000_s1123" alt="" style='position:absolute;flip:y'
  from="668,413" to="710,462" strokeweight="3pt">
  <v:stroke endarrow="block" endarrowlength="long"/>
 </v:line><v:line id="_x0000_s1124" alt="" style='position:absolute;flip:y'
  from="414,374" to="414,473" strokecolor="red" strokeweight="3pt">
  <v:stroke endarrow="block" endarrowlength="long"/>
 </v:line><v:shape id="_x0000_s1125" style='position:absolute;left:419;top:366;
  width:77;height:16' coordsize="77,16" path="m,8hdc8,3,4,5,12,2v1,,3,-1,3,-1c21,2,23,2,28,5v3,4,3,8,7,11c40,16,44,16,49,15,57,13,58,4,64,v7,1,13,5,13,13e"
  filled="f">
  <v:path arrowok="t"/>
 </v:shape><v:shape id="_x0000_s1126" style='position:absolute;left:569;top:310;
  width:97;height:55' coordsize="77,16" path="m77,16hdc75,10,74,6,67,4,58,5,62,4,54,7,52,8,48,9,48,9,44,7,45,4,41,2,39,1,35,,35,,23,1,26,6,16,9,13,8,7,6,7,6,1,7,3,7,,7e"
  filled="f">
  <v:path arrowok="t"/>
 </v:shape><v:line id="_x0000_s1127" alt="" style='position:absolute;flip:y'
  from="667,361" to="668,462" strokecolor="red" strokeweight="3pt">
  <v:stroke endarrow="block" endarrowlength="long"/>
 </v:line><v:shapetype id="_x0000_t202" coordsize="21600,21600" o:spt="202"
  path="m,l,21600r21600,l21600,xe">
  <v:stroke joinstyle="miter"/>
  <v:path gradientshapeok="t" o:connecttype="rect"/>
 </v:shapetype><v:shape id="_x0000_s1128" type="#_x0000_t202" alt="" style='position:absolute;
  left:437;top:460;width:25;height:35' filled="f" stroked="f">
  <v:textbox inset=".45pt,.6pt,.45pt,.6pt">
<table cellspacing="0" cellpadding="0" width="100%" height="100%">
	<tr>
		<td align="center"><img border="0" src="rus_he5.gif"></td>
	</tr>
</table>
  </v:textbox>
 </v:shape><v:shape id="_x0000_s1129" type="#_x0000_t202" alt="" style='position:absolute;
  left:606;top:444;width:32;height:39' filled="f" stroked="f">
  <v:textbox inset=".45pt,.6pt,.45pt,.6pt">
<table cellspacing="0" cellpadding="0" width="100%" height="100%">
	<tr>
		<td align="center"><img border="0" src="rus_he6.gif"></td>
	</tr>
</table>
  </v:textbox>
 </v:shape><v:shape id="_x0000_s1130" type="#_x0000_t202" alt="" style='position:absolute;
  left:397;top:483;width:36;height:38' filled="f" stroked="f">
  <v:textbox inset=".45pt,.6pt,.45pt,.6pt">
<table cellspacing="0" cellpadding="0" width="100%" height="100%">
	<tr>
		<td align="center"><img border="0" src="rus_he7.gif"></td>
	</tr>
</table>
  </v:textbox>
 </v:shape><v:shape id="_x0000_s1131" type="#_x0000_t202" alt="" style='position:absolute;
  left:649;top:474;width:36;height:40' filled="f" stroked="f">
  <v:textbox inset=".45pt,.6pt,.45pt,.6pt">
<table cellspacing="0" cellpadding="0" width="100%" height="100%">
	<tr>
		<td align="center"><img border="0" src="rus_he8.gif"></td>
	</tr>
</table>
  </v:textbox>
 </v:shape><v:shape id="_x0000_s1132" type="#_x0000_t202" alt="" style='position:absolute;
  left:397;top:330;width:36;height:29' filled="f" stroked="f">
  <v:textbox inset=".45pt,.6pt,.45pt,.6pt">
<table cellspacing="0" cellpadding="0" width="100%" height="100%">
	<tr>
		<td align="center"><img border="0" src="rus_he9.gif"></td>
	</tr>
</table>
  </v:textbox>
 </v:shape><v:shape id="_x0000_s1133" type="#_x0000_t202" alt="" style='position:absolute;
  left:675;top:333;width:34;height:28' filled="f" stroked="f">
  <v:textbox inset=".45pt,.6pt,.45pt,.6pt">
<table cellspacing="0" cellpadding="0" width="100%" height="100%">
	<tr>
		<td align="center"><img border="0" src="rus_he10.gif"></td>
	</tr>
</table>
  </v:textbox>
 </v:shape><v:line id="_x0000_s1134" alt="" style='position:absolute;flip:x y'
  from="466,213" to="526,289">
  <v:stroke dashstyle="dash"/>
 </v:line><v:shape id="_x0000_s1135" type="#_x0000_t202" alt="" style='position:absolute;
  left:452;top:315;width:31;height:38' filled="f" stroked="f">
  <v:textbox inset=".45pt,.6pt,.45pt,.6pt">
<table cellspacing="0" cellpadding="0" width="100%" height="100%">
	<tr>
		<td align="center"><img border="0" src="rus_he11.gif"></td>
	</tr>
</table>
  </v:textbox>
 </v:shape><v:shape id="_x0000_s1136" type="#_x0000_t202" alt="" style='position:absolute;
  left:602;top:261;width:39;height:38' filled="f" stroked="f">
  <v:textbox inset=".45pt,.6pt,.45pt,.6pt">
<table cellspacing="0" cellpadding="0" width="100%" height="100%">
	<tr>
		<td align="center"><img border="0" src="rus_he12.gif"></td>
	</tr>
</table>
  </v:textbox>
 </v:shape><v:shape id="_x0000_s1137" type="#_x0000_t202" alt="" style='position:absolute;
  left:517;top:361;width:45;height:33' stroked="f">
  <v:textbox>
<table cellspacing="0" cellpadding="0" width="100%" height="100%">
	<tr>
		<td align="center"><img border="0" src="rus_he2.gif"></td>
	</tr>
</table>
  </v:textbox>
 </v:shape><v:shape id="_x0000_s1138" type="#_x0000_t202" alt="" style='position:absolute;
  left:503;top:246;width:47;height:35' filled="f" stroked="f">
  <v:textbox inset=".45pt,.6pt,.45pt,.6pt">
<table cellspacing="0" cellpadding="0" width="100%" height="100%">
	<tr>
		<td align="center"><img border="0" src="rus_he1.gif"></td>
	</tr>
</table>
  </v:textbox>
 </v:shape></v:group><![endif]--><![if !vml]><img width=347 height=311
src="rus_head_1_2.files/image001.gif" v:shapes="_x0000_s1111 _x0000_s1112 _x0000_s1113 _x0000_s1114 _x0000_s1115 _x0000_s1116 _x0000_s1117 _x0000_s1118 _x0000_s1119 _x0000_s1120 _x0000_s1121 _x0000_s1122 _x0000_s1123 _x0000_s1124 _x0000_s1125 _x0000_s1126 _x0000_s1127 _x0000_s1128 _x0000_s1129 _x0000_s1130 _x0000_s1131 _x0000_s1132 _x0000_s1133 _x0000_s1134 _x0000_s1135 _x0000_s1136 _x0000_s1137 _x0000_s1138"><![endif]></td>
		</tr>
		<tr>
			<td>
			<p align="center">Рис. 1-2-1</td>
		</tr>
	</table>
	<p>&nbsp;&nbsp;&nbsp; Решение задачи сводится к явному указанию координат 
	точек <img border="0" src="rus_he16.gif" align="center"> и
	<img border="0" src="rus_he17.gif" align="center">, которые задают прямую, 
	перпендикулярную к обеим скрещивающимся прямым. Пусть
	<img border="0" src="rus_he16.gif" width="22" height="28" align="center"> принадлежит прямой
	<img border="0" src="rus_he3.gif" align="center">, а
	<img border="0" src="rus_he17.gif" width="23" height="28" align="center"> принадлежит прямой
	<img border="0" src="rus_he4.gif" align="center">. Зададим вектор
	<img border="0" src="rus_he9.gif" align="center">:
	<img border="0" src="rus_he15.gif" align="center">. <br>
	Построим плоскость <img border="0" src="rus_he11.gif" align="center">на 
	точке<img border="0" src="rus_he7.gif" align="center"> и векторах
	<img border="0" src="rus_he5.gif" align="center">,<img border="0" src="rus_he9.gif" align="center">, 
	а плоскость<img border="0" src="rus_he12.gif" align="center"> на точке
	<img border="0" src="rus_he8.gif" align="center"> и векторах
	<img border="0" src="rus_he6.gif" align="center"> и
	<img border="0" src="rus_he10.gif" align="center">. Рчных операций ешение 
	сводится к последовательному определению точек пересечения прямой и 
	плоскости. Точка <img border="0" src="rus_he16.gif" align="center"> является 
	точкой пересечения плоскости <img border="0" src="rus_he12.gif" align="center"> 
	и прямой
	<img border="0" src="rus_he3.gif" align="center">, а точка
	<img border="0" src="rus_he17.gif" align="center"> - точкой пересечения 
	плоскости <img border="0" src="rus_he11.gif" align="center"> и прямой
	<img border="0" src="rus_he4.gif" align="center">. <br>
&nbsp;&nbsp;&nbsp; Рассмотрим программный код, созданный для решения этой 
	задачи. Во-первых в теле файл-функции <b><font color="#00CC66">
	TwoLinePerpendicular </font></b>была создана процедура-функция <b>
	<font color="#00CC66">IntersectionLinePlane</font></b>, которая определяет 
	точку пересечения прямой и плоскости. Во-вторых, принципом всех материалов, 
	излагаемых в данной работе, является максимально возможное использование 
	матричных операций системы <span lang="en-us">MATLAB</span>. При помощи 
	процедуры <b>
	<font color="#00CC66">IntersectionLinePlane </font></b>мы получили значения 
	переменных <b><font color="#00CC66">q1</font></b>,<b><font color="#00CC66"> 
	q2</font></b>. Их размерность
	<img border="0" src="rus_he18.gif" align="center">. Размерность переменной <b><font color="#00CC66">h</font></b> 
	является величиной изменяемой. Строки программы <b><font color="#00CC66">[Q2,H]=meshgrid(q2,h); [Q1,H]=meshgrid(q1,h)</font></b> 
	написаны для того, чтобы получить значение переменной <b><font color="#00CC66">
	R3=H.*Q1+(1-H).*Q2 </font></b>для ее использования в процедуре вывода на 
	экран <b><font color="#00CC66">plot3</font></b>. <br>
&nbsp;<div align="left">
		<table border="0">
			<!-- MSTableType="nolayout" -->
			<tr>
				<td width="444"><b><font color="#00CC66">function 
				TwoLinePerpendicular()<br>
				clc<br>
				clear<br>
				t1=-5:0.1:5;&nbsp; t2=-5:0.1:5;<br>
				p1=[1 0 -1];&nbsp; p2=[1 0 1];<br>
				l1=[1 1 0] ;&nbsp;&nbsp; l2=[0 1 0];<br>
				[P1,T1]=meshgrid(p1,t1); [L1,T1]=meshgrid(l1,t1);<br>
				[P2,T2]=meshgrid(p2,t2); [L2,T2]=meshgrid(l2,t2);<br>
				R1=P1+T1.*L1;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
				R2=P2+T2.*L2;<br>
				n=cross(l1,l2);<br>
				q2=IntersectionLinePlane(p1,l1,n,p2,p2+2*l2);<br>
				q1=IntersectionLinePlane(p2,l2,n,p1,p1+2*l1);<br>
				h=0:0.05:1;<br>
				[Q2,H]=meshgrid(q2,h); [Q1,H]=meshgrid(q1,h);<br>
				R3=H.*Q1+(1-H).*Q2;<br>
				plot3(R1(:,1),R1(:,2),R1(:,3),...<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
				R2(:,1),R2(:,2),R2(:,3),...<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; R3(:,1),R3(:,2),R3(:,3))<br>
				%------------------<br>
				function Q=IntersectionLinePlane(P,L,M,A,B)<br>
				Q=A+(dot((P-A),cross(L,M))/...<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dot((B-A),cross(L,M)))*(B-A);</font></b></td>
				<td>
				<a target="_self" href="rus_head_1_2_p2.jpg">
				<img border="0" src="rus_head_1_2_p2.jpg" width="475" height="367"></a></td>
			</tr>
			<tr>
				<td width="444">&nbsp;</td>
				<td>
				<p align="center">Рис. 1-2-2</td>
			</tr>
		</table>
		<p>Задачу можно считать решенной, если найдены значения переменных&nbsp; <b><font color="#00CC66">q1</font></b>,<b><font color="#00CC66"> 
	q2</font></b>.</div>
	<div align="left">
		<table border="0">
			<!-- MSTableType="nolayout" -->
			<tr>
				<td width="358"><b><font color="#00CC66">p1=[1 0 -1]; p2=[1 0 1];l1=[1 1 0] ; l2=[0 1 0];<br>
				q2=IntersectionLinePlane(p1,l1,n,p2,p2+2*l2);<br>
				q1=IntersectionLinePlane(p2,l2,n,p1,p1+2*l1);<br>
				%------------------<br>
				function Q=IntersectionLinePlane(P,L,M,A,B)<br>
				Q=A+(dot((P-A),cross(L,M))/...<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dot((B-A),cross(L,M)))*(B-A);</font></b></td>
				<td><font size="2"><b>Для решения задачи о нахождении общего 
				перпендикуляра достаточно и такого программного кода. 
				Дополнительные операторы в предыдущем программном коде созданы 
				только для того, чтобы получить рис. 1-2-2.</b></font></td>
			</tr>
		</table>
	</div>
	<p> <br>
&nbsp;</div>
<p><br>
&nbsp;</p>

</body>

</html>
